dump: Memory
    { memoryCM = CM
        { program =
            [ ICF
                ( Mark
                    ( MArtificial "st" )
                )
            , IAL
                ( SPure
                    ( Cons 0 )
                )
            , IAL
                ( SPure
                    ( Cons 93 )
                )
            , IAL
                ( SPure
                    ( Cons 48 )
                )
            , IAL
                ( SPure
                    ( Cons 48 )
                )
            , IAL
                ( SPure
                    ( Cons 49 )
                )
            , IAL
                ( SPure
                    ( Cons 45 )
                )
            , IAL
                ( SPure
                    ( Cons 50 )
                )
            , IAL
                ( SPure
                    ( Cons 91 )
                )
            , IAL
                ( SPure
                    ( Cons 32 )
                )
            , IAL
                ( SPure
                    ( Cons 115 )
                )
            , IAL
                ( SPure
                    ( Cons 114 )
                )
            , IAL
                ( SPure
                    ( Cons 101 )
                )
            , IAL
                ( SPure
                    ( Cons 98 )
                )
            , IAL
                ( SPure
                    ( Cons 109 )
                )
            , IAL
                ( SPure
                    ( Cons 117 )
                )
            , IAL
                ( SPure
                    ( Cons 110 )
                )
            , IAL
                ( SPure
                    ( Cons 32 )
                )
            , IAL
                ( SPure
                    ( Cons 109 )
                )
            , IAL
                ( SPure
                    ( Cons 105 )
                )
            , IAL
                ( SPure
                    ( Cons 114 )
                )
            , IAL
                ( SPure
                    ( Cons 112 )
                )
            , ICF
                ( Labeled Call
                    ( LArtificial "printsln" )
                )
            , IAL
                ( SPure
                    ( Cons 0 )
                )
            , ICF
                ( Mark
                    ( MArtificial "f_start_1" )
                )
            , IAL
                ( SPure
                    ( Indexed Copy
                        ( ImmediateO 0 )
                    )
                )
            , IAL
                ( SPure
                    ( Cons 100 )
                )
            , IAL
                ( SPure ( Binary Sub ) )
            , ICF
                ( Labeled ( Branch EZ )
                    ( LArtificial "f_finished_1" )
                )
            , IAL
                ( SPure
                    ( Indexed Copy
                        ( ImmediateO 0 )
                    )
                )
            , IAL
                ( SPure
                    ( Cons 100 )
                )
            , IAL
                ( SPure ( Binary Add ) )
            , IAL
                ( SPure
                    ( Cons 1 )
                )
            , ILS Store
            , IAL
                ( SPure
                    ( Cons 1 )
                )
            , IAL
                ( SPure ( Binary Add ) )
            , ICF
                ( Labeled Jump
                    ( LArtificial "f_start_1" )
                )
            , ICF
                ( Mark
                    ( MArtificial "f_finished_1" )
                )
            , IAL ( SPure Discard )
            , IAL
                ( SPure
                    ( Cons 2 )
                )
            , ICF
                ( Mark
                    ( MArtificial "f_start_2" )
                )
            , IAL
                ( SPure
                    ( Indexed Copy
                        ( ImmediateO 0 )
                    )
                )
            , IAL
                ( SPure
                    ( Cons 11 )
                )
            , IAL
                ( SPure ( Binary Sub ) )
            , ICF
                ( Labeled ( Branch EZ )
                    ( LArtificial "f_finished_2" )
                )
            , IAL
                ( SPure
                    ( Cons 2 )
                )
            , ICF
                ( Mark
                    ( MArtificial "f_start_3" )
                )
            , IAL
                ( SPure
                    ( Indexed Copy
                        ( ImmediateO 0 )
                    )
                )
            , IAL
                ( SPure
                    ( Cons 100 )
                )
            , IAL
                ( SPure ( Binary Sub ) )
            , ICF
                ( Labeled ( Branch EZ )
                    ( LArtificial "f_finished_3" )
                )
            , IAL
                ( SPure
                    ( Indexed Copy
                        ( ImmediateO 0 )
                    )
                )
            , IAL
                ( SPure
                    ( Cons 1 )
                )
            , IAL
                ( SPure
                    ( Indexed Move
                        ( ImmediateO 1 )
                    )
                )
            , ILS Store
            , IAL
                ( SPure
                    ( Indexed Move
                        ( ImmediateO 1 )
                    )
                )
            , IAL
                ( SPure
                    ( Indexed Copy
                        ( ImmediateO 0 )
                    )
                )
            , IAL
                ( SPure
                    ( Cons 2 )
                )
            , IAL
                ( SPure
                    ( Indexed Move
                        ( ImmediateO 1 )
                    )
                )
            , ILS Store
            , IAL
                ( SPure
                    ( Indexed Move
                        ( ImmediateO 1 )
                    )
                )
            , IAL
                ( SPure
                    ( Cons 1 )
                )
            , ILS Load
            , IAL
                ( SPure
                    ( Cons 2 )
                )
            , ILS Load
            , IAL
                ( SPure ( Binary Mul ) )
            , IAL
                ( SPure
                    ( Cons 100 )
                )
            , IAL
                ( SPure ( Binary Add ) )
            , IAL
                ( SPure
                    ( Cons 0 )
                )
            , ILS Store
            , IAL
                ( SPure
                    ( Cons 1 )
                )
            , IAL
                ( SPure ( Binary Add ) )
            , ICF
                ( Labeled Jump
                    ( LArtificial "f_start_3" )
                )
            , ICF
                ( Mark
                    ( MArtificial "f_finished_3" )
                )
            , IAL ( SPure Discard )
            , IAL
                ( SPure
                    ( Cons 1 )
                )
            , IAL
                ( SPure ( Binary Add ) )
            , ICF
                ( Labeled Jump
                    ( LArtificial "f_start_2" )
                )
            , ICF
                ( Mark
                    ( MArtificial "f_finished_2" )
                )
            , IAL ( SPure Discard )
            , IAL
                ( SPure
                    ( Cons 2 )
                )
            , ICF
                ( Mark
                    ( MArtificial "f_start_4" )
                )
            , IAL
                ( SPure
                    ( Indexed Copy
                        ( ImmediateO 0 )
                    )
                )
            , IAL
                ( SPure
                    ( Cons 100 )
                )
            , IAL
                ( SPure ( Binary Sub ) )
            , ICF
                ( Labeled ( Branch EZ )
                    ( LArtificial "f_finished_4" )
                )
            , IAL
                ( SPure
                    ( Indexed Copy
                        ( ImmediateO 0 )
                    )
                )
            , IAL
                ( SPure
                    ( Cons 100 )
                )
            , IAL
                ( SPure ( Binary Add ) )
            , ILS Load
            , ICF
                ( Labeled ( Branch EZ )
                    ( LArtificial "nodraw" )
                )
            , IAL
                ( SPure
                    ( Indexed Copy
                        ( ImmediateO 0 )
                    )
                )
            , IAL ( SIO OutputDec )
            , IAL
                ( SPure
                    ( Cons 0 )
                )
            , IAL
                ( SPure
                    ( Cons 32 )
                )
            , ICF
                ( Labeled Call
                    ( LArtificial "prints" )
                )
            , ICF
                ( Mark
                    ( MArtificial "nodraw" )
                )
            , IAL
                ( SPure
                    ( Cons 1 )
                )
            , IAL
                ( SPure ( Binary Add ) )
            , ICF
                ( Labeled Jump
                    ( LArtificial "f_start_4" )
                )
            , ICF
                ( Mark
                    ( MArtificial "f_finished_4" )
                )
            , IAL ( SPure Discard )
            , IAL
                ( SPure
                    ( Cons 0 )
                )
            , ICF
                ( Labeled Call
                    ( LArtificial "printsln" )
                )
            , End
            , ICF
                ( Mark
                    ( MArtificial "prints" )
                )
            , IAL
                ( SPure
                    ( Indexed Copy
                        ( ImmediateO 0 )
                    )
                )
            , ICF
                ( Labeled ( Branch EZ )
                    ( LArtificial "prints_end" )
                )
            , IAL ( SIO OutputChar )
            , ICF
                ( Labeled Jump
                    ( LArtificial "prints" )
                )
            , ICF
                ( Mark
                    ( MArtificial "prints_end" )
                )
            , IAL ( SPure Discard )
            , ICF Return
            , ICF
                ( Mark
                    ( MArtificial "printsln" )
                )
            , ICF
                ( Labeled Call
                    ( LArtificial "prints" )
                )
            , IAL
                ( SPure
                    ( Cons 10 )
                )
            , IAL ( SIO OutputChar )
            , ICF Return
            ]
        , programCounter = 105
        , returnStack = IS []
        }
    , memoryStack = fromList []
    , memoryRAM =
        [ 0
        , 99
        , 10
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 1
        , 1
        , 1
        , 1
        , 0
        , 1
        , 0
        , 1
        , 0
        , 0
        , 0
        , 1
        , 0
        , 1
        , 0
        , 0
        , 0
        , 1
        , 0
        , 1
        , 0
        , 0
        , 0
        , 1
        , 0
        , 0
        , 0
        , 0
        , 0
        , 1
        , 0
        , 1
        , 0
        , 0
        , 0
        , 0
        , 0
        , 1
        , 0
        , 0
        , 0
        , 1
        , 0
        , 1
        , 0
        , 0
        , 0
        , 1
        , 0
        , 0
        , 0
        , 0
        , 0
        , 1
        , 0
        , 0
        , 0
        , 0
        , 0
        , 1
        , 0
        , 1
        , 0
        , 0
        , 0
        , 0
        , 0
        , 1
        , 0
        , 0
        , 0
        , 1
        , 0
        , 1
        , 0
        , 0
        , 0
        , 0
        , 0
        , 1
        , 0
        , 0
        , 0
        , 1
        , 0
        , 0
        , 0
        , 0
        , 0
        , 1
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 1
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        ]
    }
