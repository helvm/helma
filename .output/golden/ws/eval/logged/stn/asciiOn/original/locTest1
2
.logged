dump: Memory
    { memoryCM = CM
        { program =
            [ IAL
                ( SAL
                    ( Cons 0 )
                )
            , IAL
                ( SAL
                    ( Cons 69 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 1 )
                )
            , IAL
                ( SAL
                    ( Cons 110 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 2 )
                )
            , IAL
                ( SAL
                    ( Cons 116 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 3 )
                )
            , IAL
                ( SAL
                    ( Cons 101 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 4 )
                )
            , IAL
                ( SAL
                    ( Cons 114 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 5 )
                )
            , IAL
                ( SAL
                    ( Cons 32 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 6 )
                )
            , IAL
                ( SAL
                    ( Cons 97 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 7 )
                )
            , IAL
                ( SAL
                    ( Cons 32 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 8 )
                )
            , IAL
                ( SAL
                    ( Cons 110 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 9 )
                )
            , IAL
                ( SAL
                    ( Cons 117 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 10 )
                )
            , IAL
                ( SAL
                    ( Cons 109 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 11 )
                )
            , IAL
                ( SAL
                    ( Cons 98 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 12 )
                )
            , IAL
                ( SAL
                    ( Cons 101 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 13 )
                )
            , IAL
                ( SAL
                    ( Cons 114 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 14 )
                )
            , IAL
                ( SAL
                    ( Cons 58 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 15 )
                )
            , IAL
                ( SAL
                    ( Cons 32 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 16 )
                )
            , IAL
                ( SAL
                    ( Cons 0 )
                )
            , ILS Store
            , IAL
                ( SAL
                    ( Cons 0 )
                )
            , ICF
                ( CStatic "write" Call )
            , IAL
                ( SAL
                    ( Cons 100 )
                )
            , ILS ( MIO InputDec )
            , IAL
                ( SAL
                    ( Cons 0 )
                )
            , ICF
                ( CStatic "write" Call )
            , IAL
                ( SAL
                    ( Cons 101 )
                )
            , ILS ( MIO InputDec )
            , IAL
                ( SAL
                    ( Cons 100 )
                )
            , ILS Load
            , IAL
                ( SAL
                    ( Cons 101 )
                )
            , ILS Load
            , ICF
                ( CStatic "loctest" Call )
            , IAL ( SIO OutputDec )
            , End
            , ICF
                ( SMark "loctest" )
            , IAL
                ( SAL
                    ( SStatic 0 Copy )
                )
            , IAL
                ( SAL
                    ( SStatic 2 Copy )
                )
            , IAL
                ( SAL ( Binary Add ) )
            , IAL
                ( SAL
                    ( SStatic 2 Slide )
                )
            , ICF Return
            , ICF
                ( SMark "add" )
            , IAL
                ( SAL ( Binary Add ) )
            , ICF Return
            , ICF
                ( SMark "write" )
            , IAL
                ( SAL
                    ( SStatic 0 Copy )
                )
            , ILS Load
            , IAL
                ( SAL
                    ( SStatic 0 Copy )
                )
            , ICF
                ( CStatic "write_end" ( Branch EZ ) )
            , IAL ( SIO OutputChar )
            , IAL
                ( SAL
                    ( Cons 1 )
                )
            , IAL
                ( SAL ( Binary Add ) )
            , ICF
                ( CStatic "write" Jump )
            , ICF
                ( SMark "write_end" )
            , IAL ( SAL Discard )
            , IAL ( SAL Discard )
            , ICF Return
            , ICF
                ( SMark "read" )
            , IAL
                ( SAL
                    ( SStatic 0 Copy )
                )
            , IAL
                ( SAL
                    ( SStatic 0 Copy )
                )
            , ILS ( MIO InputChar )
            , ILS Load
            , IAL
                ( SAL
                    ( SStatic 0 Copy )
                )
            , IAL
                ( SAL
                    ( Cons 10 )
                )
            , IAL
                ( SAL ( Binary Sub ) )
            , ICF
                ( CStatic "read_end" ( Branch EZ ) )
            , IAL ( SAL Discard )
            , IAL
                ( SAL
                    ( Cons 1 )
                )
            , IAL
                ( SAL ( Binary Add ) )
            , ICF
                ( CStatic "read" Jump )
            , ICF
                ( SMark "read_end" )
            , IAL ( SAL Discard )
            , IAL
                ( SAL
                    ( Cons 1 )
                )
            , IAL
                ( SAL ( Binary Add ) )
            , IAL
                ( SAL
                    ( Cons 0 )
                )
            , ILS Store
            , ICF Return
            , ICF
                ( SMark "newline" )
            , IAL
                ( SAL
                    ( Cons 10 )
                )
            , IAL
                ( SAL
                    ( Cons 13 )
                )
            , IAL ( SIO OutputChar )
            , IAL ( SIO OutputChar )
            , ICF Return
            ]
        , programCounter = 66
        , returnStack = IS []
        }
    , memoryStack = fromList []
    , memoryRAM =
        [ 69
        , 110
        , 116
        , 101
        , 114
        , 32
        , 97
        , 32
        , 110
        , 117
        , 109
        , 98
        , 101
        , 114
        , 58
        , 32
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 0
        , 1
        , 2
        ]
    }
